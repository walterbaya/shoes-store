package com.shoesstore.shoesstore.controller;

import com.shoesstore.shoesstore.model.Supplier;
import jakarta.validation.Valid;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/proveedores")
public class SupplierService {

    private final ProviderService proveedorService;

    public SupplierService(ProviderService proveedorService) {
        this.proveedorService = proveedorService;
    }

    @PreAuthorize("hasRole('ADMIN')")
    @PostMapping
    public ResponseEntity<Supplier> crearProveedor(
            @RequestBody @Valid Supplier dto) {
        Supplier prov = new Supplier();
        prov.setName(dto.getName());
        Supplier creado = proveedorService.registrarProveedor(prov, dto.getProductIds());
        return ResponseEntity.status(HttpStatus.CREATED).body(creado);
    }

    @PreAuthorize("hasRole('ADMIN')")
    @PutMapping("/{id}/productos")
    public ResponseEntity<Supplier> actualizarProductos(
            @PathVariable Long id,
            @RequestBody List<Long> productoIds) {
        Supplier actualizado = proveedorService
                .actualizarProveedores(id, productoIds);
        return ResponseEntity.ok(actualizado);
    }
}

