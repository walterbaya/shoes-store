<div th:fragment="content card shadow">
    <div class="card-header bg-primary text-white d-flex align-items-center justify-content-between">
        <h1 class="h4 mb-0">Reporte de Ventas</h1>
        <div class="d-flex align-items-center gap-2">
            <!-- Contenedor de fechas -->
            <div id="dateSelectors" class="d-flex align-items-center gap-2">
                <div class="input-group input-group-sm" id="startGroup">
                    <label class="input-group-text">Desde</label>
                    <input type="date" id="startDate" class="form-control form-control-sm">
                </div>
                <div class="input-group input-group-sm" id="endGroup">
                    <label class="input-group-text">Hasta</label>
                    <input type="date" id="endDate" class="form-control form-control-sm">
                </div>
            </div>

            <!-- Menú de selección de reporte -->
            <select id="reportType" class="form-select form-select-sm w-auto">
                <option value="byPeriod">Ventas por Periodo</option>
                <option value="daily">Ventas Diarias</option>
                <option value="byUser">Ventas por Usuario</option>
                <option value="byProduct">Top Productos</option>
            </select>
        </div>
    </div>

    <div class="card-body">
        <!-- Gráfico -->
        <div class="mb-5 p-4 bg-light rounded-3 shadow-sm">
            <h3 class="h4 mb-4 text-primary">
                <i class="bi bi-bar-chart-line me-2"></i>
                <span id="chartTitle">Ventas por Periodo</span>
            </h3>
            <div class="chart-container" style="position: relative; height: 400px;">
                <canvas id="salesChart"></canvas>
            </div>
        </div>

        <!-- Tabla de detalle -->
        <div class="mb-4 p-4 bg-white rounded-3 shadow-sm">
            <h3 class="h4 mb-4 text-primary">
                <i class="bi bi-table me-2"></i>Detalle del Reporte
            </h3>
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle border" id="reportTable">
                    <thead class="table-primary">
                    <!-- Se cargará dinámicamente -->
                    </thead>
                    <tbody>
                    <!-- Se cargará dinámicamente -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Estilos -->
<style>
    :root {
        --primary-color: #0d6efd;
        --primary-color-rgb: 13,110,253;
        --secondary-color: #6c757d;
        --border-color: #dee2e6;
        --light-bg: #f8f9fa;
        --text-color: #212529;
    }

    .card-header.bg-primary {
        border-radius: 0.75rem 0.75rem 0 0;
        padding: 1.25rem 1.5rem;
    }

    .form-select.form-select-lg,
    .form-control.form-control-lg {
        padding: 0.75rem 1rem;
        font-size: 1rem;
        border-radius: 0.5rem;
        border: 1px solid var(--border-color);
    }

    .form-select:focus,
    .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.25rem rgba(var(--primary-color-rgb), 0.25);
    }

    .mb-4 {
        margin-bottom: 2rem !important;
    }

    .input-group {
        border-radius: 0.5rem;
        overflow: hidden;
    }

    .input-group-text {
        background-color: var(--light-bg);
        border: 1px solid var(--border-color);
        color: var(--secondary-color);
        border-left: none;
    }

    .form-control {
        border-right: none;
    }

    .form-control::placeholder {
        color: #aaa;
    }

    .btn.btn-primary.btn-lg.w-100 i {
        font-size: 1.2rem;
        vertical-align: middle;
    }
</style>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script th:inline="javascript">
    document.addEventListener('DOMContentLoaded', () => {
        const ctx = document.getElementById('salesChart').getContext('2d');
        const reportSelect = document.getElementById('reportType');
        const chartTitle = document.getElementById('chartTitle');
        const tableHead = document.querySelector('#reportTable thead');
        const tableBody = document.querySelector('#reportTable tbody');
        const startInput = document.getElementById('startDate');
        const endInput = document.getElementById('endDate');
        const startGroup = document.getElementById('startGroup');
        const endGroup = document.getElementById('endGroup');

        // Establecer fecha de hoy
        const today = new Date().toISOString().split('T')[0];
        startInput.value = today;
        endInput.value = today;

        const salesChart = new Chart(ctx, {
            type: 'bar',
            data: { labels: [], datasets: [] },
            options: { scales: { y: { beginAtZero: true } } }
        });

        const urlMap = {
            byPeriod: 'api/reports/sales/period',
            daily: 'api/reports/sales/daily',
            byUser: 'api/reports/sales/by-user',
            byProduct: 'api/reports/sales/by-product',
        };

        const titles = {
            byPeriod: 'Ventas por Periodo',
            daily: 'Ventas Diarias',
            byUser: 'Ventas por Usuario',
            byProduct: 'Top Productos',
        };

        function updateDateInputsVisibility(type) {
            if (type === 'daily') {
                startGroup.querySelector('label').textContent = 'Fecha';
                endGroup.style.display = 'none';
            } else {
                startGroup.querySelector('label').textContent = 'Desde';
                endGroup.style.display = 'flex';
            }
        }

        async function loadReport(type) {
            updateDateInputsVisibility(type);

            let start = startInput.value;
            let end = endInput.value;

            if (type === 'daily') {
                end = start;
            }

            const url = new URL(urlMap[type], window.location.origin);
            url.searchParams.append('startDate', start);
            url.searchParams.append('endDate', end);

            const res = await fetch(url);
            if (!res.ok) {
                console.error('Error:', res.status);
                return;
            }

            const { labels, datasets, tableRows } = await res.json();

            // Actualizar gráfico
            salesChart.data.labels = labels;
            salesChart.data.datasets = datasets;
            salesChart.update();

            chartTitle.textContent = titles[type] || '';

            // Actualizar tabla
            tableHead.innerHTML = '';
            tableBody.innerHTML = '';

            if (tableRows?.length) {
                const headerRow = document.createElement('tr');
                Object.keys(tableRows[0]).forEach(col => {
                    const th = document.createElement('th');
                    th.textContent = col;
                    headerRow.appendChild(th);
                });
                tableHead.appendChild(headerRow);

                tableRows.forEach(row => {
                    const tr = document.createElement('tr');
                    Object.values(row).forEach(val => {
                        const td = document.createElement('td');
                        td.textContent = val;
                        tr.appendChild(td);
                    });
                    tableBody.appendChild(tr);
                });
            }
        }

        // Inicializar
        updateDateInputsVisibility(reportSelect.value);
        loadReport(reportSelect.value);

        // Eventos
        reportSelect.addEventListener('change', () => loadReport(reportSelect.value));
        startInput.addEventListener('change', () => loadReport(reportSelect.value));
        endInput.addEventListener('change', () => loadReport(reportSelect.value));
    });
</script>
